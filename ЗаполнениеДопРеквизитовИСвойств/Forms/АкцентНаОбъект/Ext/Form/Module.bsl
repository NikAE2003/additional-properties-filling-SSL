
#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ВладелецСвойств") Тогда
		ВладелецСвойств = Параметры.ВладелецСвойств;
	КонецЕсли;
	
	ТипыВладельцевДопСвойств = ТипыВладельцевДопСвойств();
	
	Для каждого ПолноеИмя Из ТипыВладельцевДопСвойств Цикл
		
		МетаданныеТипа = Метаданные.НайтиПоПолномуИмени(ПолноеИмя);
		Представление = МетаданныеТипа.Представление();
		
		Если ПустаяСтрока(Представление) Тогда
			Представление = МетаданныеТипа.Синоним;		
		КонецЕсли;
		
		Элементы.ВладелецСвойств.СписокВыбора.Добавить(ПолноеИмя, Представление);
	
	КонецЦикла;
	
	УстановитьНастройкиДинамическогоСписка();
	
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
&НаКлиенте
Процедура ВладелецСвойствПриИзменении(Элемент)
	УстановитьНастройкиДинамическогоСписка();
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок
&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)
	Отказ  = Истина;
	
	ПарметрыОткрытия = Новый Структура;
	ПарметрыОткрытия.Вставить("СсылкаНаОбъект", Элементы.Список.ТекущаяСтрока);
	ПарметрыОткрытия.Вставить("СвойстваОбъекта", СвойстваОбъекта());
	
	ОткрытьФорму("ВнешняяОбработка.ЗаполнениеДопРеквизитовИСвойств.Форма.СвойстваОбъекта", ПарметрыОткрытия, ЭтотОбъект, УникальныйИдентификатор);
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура ВернутьсяКОсновнойФорме(Команда)
	Закрыть();
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
&НаСервереБезКонтекста
Функция ТипыВладельцевДопСвойств()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НаборыДополнительныхРеквизитовИСведенийДополнительныеРеквизиты.ИмяПредопределенногоНабора КАК ИмяПредопределенногоНабора
		|ИЗ
		|	Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК НаборыДополнительныхРеквизитовИСведенийДополнительныеРеквизиты
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	НаборыДополнительныхРеквизитовИСведенийДополнительныеСведения.ИмяПредопределенногоНабора
		|ИЗ
		|	Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеСведения КАК НаборыДополнительныхРеквизитовИСведенийДополнительныеСведения";
	
	Выборка = Запрос.Выполнить().Выбрать();
	ТипыВладельцевДопСвойств = Новый Массив;
	Пока Выборка.Следующий() Цикл
		ТипыВладельцевДопСвойств.Добавить(СтрЗаменить(Выборка.ИмяПредопределенногоНабора, "_", "."));
	КонецЦикла;
	
	возврат ТипыВладельцевДопСвойств;

КонецФункции // ()

&НаСервере
Процедура УстановитьНастройкиДинамическогоСписка()
	
	Если ПустаяСтрока(ВладелецСвойств) Тогда
		Возврат;	
	КонецЕсли;
	
	СвойстваОбъекта = СвойстваОбъекта();

	Список.ПроизвольныйЗапрос = Истина;
	Список.ТекстЗапроса = ТекстЗапросаДляДинамическогоСписка(СвойстваОбъекта);
	Список.ОсновнаяТаблица = ВладелецСвойств;
	
	ПараметрыСписка = Список.КомпоновщикНастроек.Настройки.ПараметрыДанных;
	
	Идентификаторы = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(СвойстваОбъекта, "ИдентификаторДляФормул");
	Для каждого Свойство Из СвойстваОбъекта Цикл
		ПараметрыСписка.УстановитьЗначениеПараметра(Идентификаторы[Свойство], Свойство);
	КонецЦикла;
	
	ВывестиВСписокДанныеДопСвойств(СвойстваОбъекта);

КонецПроцедуры

&НаСервере
Функция СвойстваОбъекта()

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ИмяПредопределенногоНабора", СтрЗаменить(ВладелецСвойств, ".", "_"));
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НаборыДополнительныхРеквизитовИСведенийДополнительныеРеквизиты.Свойство КАК Свойство
	|ИЗ
	|	Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК НаборыДополнительныхРеквизитовИСведенийДополнительныеРеквизиты
	|ГДЕ
	|	НаборыДополнительныхРеквизитовИСведенийДополнительныеРеквизиты.ИмяПредопределенногоНабора = &ИмяПредопределенногоНабора
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НаборыДополнительныхРеквизитовИСведенийДополнительныеСведения.Свойство
	|ИЗ
	|	Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеСведения КАК НаборыДополнительныхРеквизитовИСведенийДополнительныеСведения
	|ГДЕ
	|	НаборыДополнительныхРеквизитовИСведенийДополнительныеСведения.ИмяПредопределенногоНабора = &ИмяПредопределенногоНабора";
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Свойство");

КонецФункции // СвойстваОбъекта()

&НаСервере
Функция ТекстЗапросаДляДинамическогоСписка(СвойстваОбъекта)
	
	РеквизитыСвойств = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(СвойстваОбъекта, "ЭтоДополнительноеСведение, ИдентификаторДляФормул");
	МассивВыраженийПолей = Новый Массив;
	МассивВыраженийСоединений = Новый Массив;
	Для каждого Свойство Из СвойстваОбъекта Цикл
		
		РеквизитыСвойства = РеквизитыСвойств[Свойство];
		Идентификатор = РеквизитыСвойства.ИдентификаторДляФормул;
		
		МассивВыраженийПолей.Добавить("	" + Идентификатор + ".Значение КАК " + Идентификатор);
		
		Если РеквизитыСвойства.ЭтоДополнительноеСведение Тогда
			ВыражениеСоединения = 
			"		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК " + Идентификатор + "
			|		ПО Объекты.Ссылка = " + Идентификатор + ".Объект
			|			И " + Идентификатор + ".Свойство = &" + Идентификатор;
		Иначе
			ВыражениеСоединения = 
			"		ЛЕВОЕ СОЕДИНЕНИЕ " + ВладелецСвойств + ".ДополнительныеРеквизиты КАК " + Идентификатор + "
			|		ПО Объекты.Ссылка = " + Идентификатор + ".Ссылка
			|			И " + Идентификатор + ".Свойство = &" + Идентификатор;
		КонецЕсли;
		
		МассивВыраженийСоединений.Добавить(ВыражениеСоединения);
		
	КонецЦикла;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ 
	|	Объекты.Ссылка КАК Ссылка," + Символы.ПС;
	ТекстЗапроса = ТекстЗапроса + СтрСоединить(МассивВыраженийПолей, "," + Символы.ПС) + Символы.ПС;
	
	ТекстЗапроса = ТекстЗапроса + 
	"ИЗ 
	|	" + ВладелецСвойств + " КАК Объекты" + Символы.ПС;
	ТекстЗапроса = ТекстЗапроса + СтрСоединить(МассивВыраженийСоединений, Символы.ПС);
	
	Возврат ТекстЗапроса;
	
КонецФункции

&НаСервере
Процедура ВывестиВСписокДанныеДопСвойств(СвойстваОбъекта)
	
	УдаляемыеЭлементы = Новый Массив;
	Для каждого Колонка Из Элементы.Список.ПодчиненныеЭлементы Цикл
		УдаляемыеЭлементы.Добавить(Колонка);
	КонецЦикла;
	
	Для каждого УдаляемыйЭлемент Из УдаляемыеЭлементы Цикл
		Элементы.Удалить(УдаляемыйЭлемент);	
	КонецЦикла;
	
	НоваяКолонка = Элементы.Добавить("КолонкаСсылка", Тип("ПолеФормы"), Элементы.Список);
	НоваяКолонка.Вид = ВидПоляФормы.ПолеВвода;
	НоваяКолонка.ПутьКДанным = "Список.Ссылка";

	РеквизитыСвойств = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(СвойстваОбъекта, "ИдентификаторДляФормул, ТипЗначения");
	
	Для каждого Свойство Из СвойстваОбъекта Цикл
		
		Идентификатор = РеквизитыСвойств[Свойство].ИдентификаторДляФормул;
		Булево = ОбщегоНазначения.ОписаниеТипаСостоитИзТипа(РеквизитыСвойств[Свойство].ТипЗначения, Тип("Булево"));
	
		НоваяКолонка = Элементы.Добавить("Колонка" + Идентификатор, Тип("ПолеФормы"), Элементы.Список);
		Если Булево Тогда
			НоваяКолонка.Вид = ВидПоляФормы.ПолеФлажка;
		Иначе
			НоваяКолонка.Вид = ВидПоляФормы.ПолеВвода;
		КонецЕсли;
		НоваяКолонка.ПутьКДанным = "Список." + Идентификатор;
	
	КонецЦикла;

КонецПроцедуры
#КонецОбласти

